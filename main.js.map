{"version":3,"sources":["./src/app/favorites/favorites.component.ts","./src/app/favorites/favorites.component.html","./src/app/actions/wallpapers.effects.ts","./src/environments/environment.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/app.module.ts","./src/app/api/unsplash-api.service.ts","./src/app/reducers/wallpapers.reducer.ts","./src/app/components/components.module.ts","./src/app/dashboard/search/search.component.ts","./src/app/dashboard/search/search.component.html","./src/app/components/grid/grid.component.ts","./src/app/components/grid/grid.component.html","./src/app/actions/wallpapers.actions.ts","./src/app/unsplash-api.const.ts","./src/app/favorites/favorites.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IWallpaper } from '../models/wallpaper.model';\nimport { select, Store } from '@ngrx/store';\nimport { IAppState } from '../app.state';\nimport * as WallpaperActions from './../actions/wallpapers.actions';\n\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.scss']\n})\nexport class FavoritesComponent implements OnInit {\n  public favorites: IWallpaper[];\n\n\n  constructor(\n    private store: Store<{ wallpapers: IAppState }>,\n  ) {\n    store.pipe(select('wallpapers'))\n      .subscribe(\n        data => (this.favorites = data.favorites)\n      );\n  }\n\n  ngOnInit(): void {\n  }\n\n  public removeFromFavorites(wallpaper: IWallpaper): void {\n    this.store.dispatch(WallpaperActions.removeWallpaperFromFavorites({ paper: wallpaper }));\n  }\n\n}\n","<a class=\"nav-link\" routerLink=\"../dashboard\">Go to Dashboard</a>\r\n<section>\r\n  <app-grid\r\n    [wallpapers]=\"favorites\"\r\n    [actionName]=\"'Remove'\"\r\n    [action]=\"removeFromFavorites.bind(this)\"\r\n  ></app-grid>\r\n  <!-- TODO ANIMATION ON NAVIGATION -->\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, Effect, ofType } from '@ngrx/effects';\r\nimport { asyncScheduler, concat, EMPTY, of } from 'rxjs';\r\nimport { map, mergeMap, catchError, switchMap, delay, tap, concatMap } from 'rxjs/operators';\r\nimport { UnsplashApiService } from '../api/unsplash-api.service';\r\nimport * as WallpaperActions from './wallpapers.actions';\r\n\r\nexport const GET_RECENT_WALLPAPERS = '[WALLPAPERS] Recent';\r\nexport const SEARCH_WALLPAPERS = '[SEARCH_WALLPAPERS] Search';\r\n\r\n\r\n@Injectable()\r\nexport class WallpapersEffects {\r\n  loadRecent$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(GET_RECENT_WALLPAPERS),\r\n      concatMap(() => concat(\r\n        of(WallpaperActions.recentLoading()), // Dispatch Action Run loader\r\n        this.unsplashApi.getLast15() // Common httpClient api service\r\n          .pipe(\r\n            switchMap(recent => [\r\n              WallpaperActions.loadRecentSuccess({ recent }), // Dispatch Action when loaded\r\n            ]),\r\n            catchError(() => EMPTY)   // TODO Error Handling\r\n          )))\r\n    )\r\n  );\r\n\r\n  searchPapers$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(SEARCH_WALLPAPERS),\r\n      concatMap((input) => concat(\r\n        of(WallpaperActions.recentLoading()),\r\n          this.unsplashApi.searchWallpapers(input)\r\n            .pipe(\r\n              switchMap(results => [\r\n                WallpaperActions.loadRecentSuccess({ recent: results.results }),\r\n              ]),\r\n              catchError(() => EMPTY)   // TODO Error Handling\r\n            )\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private unsplashApi: UnsplashApiService\r\n  ) {\r\n  }\r\n\r\n  //\r\n  // @Effect()\r\n  // loadRecent$ = this.actions$.pipe(\r\n  //   ofType(GET_RECENT_WALLPAPERS),\r\n  //   concatMap(() => concat(\r\n  //     of(new WallpaperActions.RecentLoading()),\r\n  //     this.unsplashApi.getLast15()\r\n  //       .pipe(\r\n  //         delay(1500),\r\n  //         switchMap(last15 => [\r\n  //           new WallpaperActions.AddRecentWallpapers(last15),\r\n  //           new WallpaperActions.RecentLoaded(),\r\n  //         ]),\r\n  //         catchError(() => EMPTY)   // TODO Error Handling\r\n  //       )))\r\n  // );\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { IWallpaper, IUser } from '../models/wallpaper.model';\nimport { IAppState } from '../app.state';\nimport { GET_RECENT_WALLPAPERS } from '../actions/wallpapers.effects';\nimport { addWallpaperToFavorites } from '../actions/wallpapers.actions';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\n\nexport class DashboardComponent implements OnInit {\n\n  public recent: IWallpaper[];\n  public loading: boolean;\n\n  constructor(\n    private store: Store<{ wallpapers: IAppState }>\n  ) {\n    store.pipe(select('wallpapers'))\n      .subscribe(data => {\n        this.recent = data.recent;\n        this.loading = data.recentLoading;\n      });\n  }\n\n  public addToFavorites(paper: IWallpaper): void {\n    this.store.dispatch(addWallpaperToFavorites({ paper }));\n  }\n\n  ngOnInit(): void {\n    if (!this.recent || this.recent && !this.recent.length) {\n      this.store.dispatch({ type: GET_RECENT_WALLPAPERS });\n    }\n  }\n\n\n}\n","<a class=\"nav-link\" routerLink=\"../favorites\">Go to Favorites</a>\r\n<app-search></app-search>\r\n<section>\r\n  <app-grid\r\n    [wallpapers]=\"recent\"\r\n    [actionName]=\"'&#x2729; Favorite'\"\r\n    [action]=\"addToFavorites.bind(this)\"\r\n  ></app-grid>\r\n  <div *ngIf=\"loading\">Loading ... .</div>\r\n\r\n  <!-- TODO nice loader -->\r\n</section>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ngrx-wallpapers';\n}\n","\n<h3 class=\"app-heading\">Ultimate Wallpapers</h3>\n<div class=\"app-wrp\">\n  <router-outlet></router-outlet>\n</div>\n\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { SearchComponent } from './search/search.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { SharedComponentsModule } from '../components/components.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent, SearchComponent],\r\n  imports: [\r\n    RouterModule,\r\n    SharedComponentsModule,\r\n    CommonModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport { FavoritesModule } from './favorites/favorites.module';\r\n\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { reducer } from './reducers/wallpapers.reducer';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedComponentsModule } from './components/components.module';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { WallpapersEffects } from './actions/wallpapers.effects';\r\nimport { UnsplashApiService } from './api/unsplash-api.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    DashboardModule,\r\n    SharedComponentsModule,\r\n    FavoritesModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    EffectsModule.forRoot([WallpapersEffects]),\r\n    StoreModule.forRoot({\r\n      wallpapers: reducer\r\n    })\r\n  ],\r\n  exports: [\r\n  ],\r\n  providers: [\r\n    UnsplashApiService,\r\n    HttpClient,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import { Injectable } from '@angular/core';\nimport Unsplash, { toJson } from 'unsplash-js';\nimport { APP_ACCESS_KEY } from '../unsplash-api.const';\nimport { Observable } from 'rxjs';\nimport { from } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class UnsplashApiService {\n  public unsplash: Unsplash;\n\n  constructor(\n    private readonly http: HttpClient\n  ) {\n    this.unsplash = new Unsplash({\n      accessKey: APP_ACCESS_KEY,\n    });\n  }\n\n  public getLast15(): Observable<any> {\n    return from(this.unsplash.photos.listPhotos(2, 15, 'latest').then(toJson));\n  }\n\n  public searchWallpapers(input: { [key: string]: string, searchString: string }): Observable<any> {\n    return from(this.unsplash.search.photos(input.searchString, 1, 15, { orientation: 'portrait' }).then(toJson));\n  }\n\n  public download(url, name): void{\n    this.http.get(url, {\n      headers: new HttpHeaders({ Accept: '*/*' }),\n      responseType: 'blob',\n    })\n      .subscribe( blob => {\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = name;\n        link.target = 'blank';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      });\n  }\n\n}\n","import { IWallpaper } from '../models/wallpaper.model';\r\nimport * as WallpaperActions from '../actions/wallpapers.actions';\r\nimport { IAppState } from '../app.state';\r\nimport { createReducer, on } from '@ngrx/store';\r\n\r\nconst initialState: IAppState = {\r\n  recent: [], // TODO Refactor store as an object key: id\r\n  favorites: [],\r\n  recentLoading: false,\r\n  recentLoaded: false,\r\n};\r\n\r\nexport const reducer = createReducer(\r\n  initialState,\r\n  on(WallpaperActions.loadRecentSuccess, (state, { recent }) => ({\r\n      ...state,\r\n      recent,\r\n      recentLoaded: true,\r\n      recentLoading: false,\r\n    })\r\n  ),\r\n  on(WallpaperActions.recentLoading, (state) => ({\r\n      ...state,\r\n      recentLoading: true,\r\n    })\r\n  ),\r\n  on(WallpaperActions.addWallpaperToFavorites, (state, { paper }) => ({\r\n      ...state,\r\n      favorites: [paper,\r\n        ...state.favorites.filter((fav: IWallpaper) => fav.id !== paper.id)\r\n      ]\r\n    })\r\n  ),\r\n  on(WallpaperActions.removeWallpaperFromFavorites, (state, { paper }) => ({\r\n      ...state,\r\n      favorites:  state.favorites.filter((wallpaper: IWallpaper) => {\r\n        return wallpaper.id !== paper.id;\r\n      })\r\n    })\r\n  )\r\n);\r\n","import { NgModule } from '@angular/core';\r\nimport { GridComponent } from './grid/grid.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    GridComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    GridComponent\r\n  ],\r\n  providers: [],\r\n})\r\nexport class SharedComponentsModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { SEARCH_WALLPAPERS } from '../../actions/wallpapers.effects';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  public searchForm: FormGroup;\n\n  constructor(\n    private store: Store,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.initSearchForm();\n  }\n\n  private initSearchForm(): void {\n    this.searchForm = new FormGroup({\n      search: new FormControl(null)\n    });\n    this.searchForm.valueChanges\n      .pipe(debounceTime(500))\n      .subscribe((values: { search: string }) => {\n        this.store.dispatch({ type: SEARCH_WALLPAPERS, searchString: values.search });\n      });\n  }\n}\n","<form class=\"search-form\" [formGroup]=\"searchForm\">\n  <label for=\"searchInput\">\n    <input formControlName=\"search\" placeholder=\"Audi, Fresh, Red\" id=\"searchInput\"/>\n  </label>\n</form>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { IWallpaper } from '../../models/wallpaper.model';\r\nimport { UnsplashApiService } from '../../api/unsplash-api.service';\r\n\r\n@Component({\r\n  selector: 'app-grid',\r\n  templateUrl: './grid.component.html',\r\n  styleUrls: ['./grid.component.scss']\r\n})\r\n\r\nexport class GridComponent implements OnInit {\r\n\r\n  public papers: Observable<IWallpaper[]>;\r\n\r\n  @Input() wallpapers: IWallpaper[];\r\n  @Input() action: (paper: IWallpaper) => void;\r\n  @Input() actionName: string;\r\n\r\n  constructor(\r\n    private readonly unsplashApi: UnsplashApiService,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public dispatchAction(paper: IWallpaper): void {\r\n    this.action(paper);\r\n  }\r\n\r\n  public download(paper: IWallpaper, size: 'regular' | 'full'): void {\r\n    this.unsplashApi.download(paper.urls[size], `${paper.id}_${size}`);\r\n  }\r\n}\r\n\r\n\r\n// TODO NGRX STORE MIGRATION // Minimize response calls + WebSocket + angular-library ?\r\n\r\n// TODO Architecture\r\n// NG RX STORE => OnPush strategy => Performance;\r\n// WebSocket For Actual values;\r\n// library for reusable components;\r\n","<div class=\"grid-container\">\n  <ng-container *ngFor=\"let wallpaper of wallpapers\">\n    <article class=\"grid-item\">\n      <div class=\"grid-content-wrapper\">\n        <div class=\"grid-actions\">\n          <!--            <span *ngIf=\"wallpaper.urls.raw\" (click)=\"dispatchDownload(wallpaper.urls.raw)\"> &#8595; Raw</span>-->\n          <span *ngIf=\"wallpaper.urls.regular\" (click)=\"download(wallpaper, 'regular')\"> &#8595; Regular</span>\n          <span *ngIf=\"wallpaper.urls.regular\" (click)=\"download(wallpaper, 'full')\"> &#8595; Full</span>\n\n          <span [ngClass]=\"actionName\" (click)=\"dispatchAction(wallpaper)\">{{ actionName }}</span>\n        </div>\n      </div>\n      <div class=\"grid-image\" [style.backgroundImage]=\"'url('+ wallpaper.urls.regular +')'\"></div>\n    </article>\n    <!--    </div>-->\n  </ng-container>\n</div>\n<div *ngIf=\"papers\">Loading...</div>\n\n","import { Action, createAction, props } from '@ngrx/store';\r\nimport { IWallpaper } from '../models/wallpaper.model';\r\n\r\nexport const RECENT_LOADING = '[WALLPAPERS] Recent Loading';\r\nexport const RECENT_LOADED = '[WALLPAPERS] Recent Loaded';\r\nexport const ADD_RECENT_WALLPAPERS = '[WALLPAPERS] Add Recent';\r\nexport const ADD_WALLPAPER_TO_FAVORITES = '[WALLPAPERS] Add';\r\nexport const REMOVE_WALLPAPER_FROM_FAVORITES = '[WALLPAPERS] Remove';\r\n\r\n\r\nexport const loadRecentSuccess = createAction(\r\n  ADD_RECENT_WALLPAPERS,\r\n  props<{ recent: IWallpaper[] }>()\r\n);\r\n\r\nexport const addWallpaperToFavorites = createAction(\r\n  ADD_WALLPAPER_TO_FAVORITES,\r\n  props<{ paper: IWallpaper }>()\r\n);\r\n\r\n\r\nexport const removeWallpaperFromFavorites = createAction(\r\n  REMOVE_WALLPAPER_FROM_FAVORITES,\r\n  props<{ paper: IWallpaper }>()\r\n);\r\n\r\nexport const recentLoading = createAction(\r\n  RECENT_LOADING,\r\n);\r\n\r\n\r\nexport const recentLoaded = createAction(\r\n  RECENT_LOADED,\r\n);\r\n","export const APP_ACCESS_KEY = 'NqEykddHFY9PuAofQ4tstk7hRyPO1BR3x7ZCZIv_b3k';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FavoritesComponent } from './favorites.component';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { SharedComponentsModule } from '../components/components.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [FavoritesComponent],\r\n  imports: [\r\n    AppRoutingModule,\r\n    SharedComponentsModule\r\n  ]\r\n})\r\nexport class FavoritesModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full'},\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}